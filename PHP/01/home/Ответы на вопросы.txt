1.IP - это уникальный числовой идентификатор устройства в компьютерной сети, работающей по протоколу IP.
Используется для отправки сетевых пакетов через сеть TCP/IP или Интернет. 
Версия 4 (IPv4)-четвёртая версия интернет-протокола (IP). Первая широко используемая версия. 
IPv5, Stream protocol — экспериментальный протокол реального времени. ST предполагался быть ориентированным 
на соединение с версией IPv4, но так и не был принят для публичного использования.
Версия 6 (IPv6) - новая версия интернет-протокола, призванная решить проблемы, с которыми столкнулась 
предыдущая версия IPv4 при её использовании в Интернете, за счёт целого ряда принципиальных изменений. 
Протокол был разработан IETF. Длина адреса IPv6 составляет 128 бит, в отличие от адреса IPv4, длина которого равна 32 битам.

2.CGI — стандарт интерфейса, используемого внешней программой для связи с веб-сервером. Программы-серверы ожидают 
от клиентских программ запросы и предоставляют им свои ресурсы в виде данных ,например, загрузка файлов посредством HTTP, 
FTP, BitTorrent, потоковое мультимедиа или работа с базами данных или в виде сервисных функций, например, работа с 
электронной почтой, общение посредством систем мгновенного обмена сообщениями или просмотр web-страниц во всемирной паутине.
Вообще говоря, служба — это абстракция компьютерных ресурсов, и клиенту не нужно беспокоиться о том, как сервер работает 
при выполнении запроса и доставке ответа. Клиенту нужно только понять ответ, основанный на известном протоколе приложения, 
то есть содержание и форматирование данных для запрашиваемой услуги.
Клиенты и серверы обмениваются сообщениями в шаблоне запрос-ответ. Клиент отправляет запрос, а сервер возвращает ответ.
Этот обмен сообщениями является примером межпроцессного взаимодействия.
Преимущества:
Отсутствие дублирования кода программы-сервера программами-клиентами.
Так как все вычисления выполняются на сервере, то требования к компьютерам, на которых установлен клиент, снижаются.
Все данные хранятся на сервере, который, как правило, защищён гораздо лучше большинства клиентов. На сервере проще
организовать контроль полномочий, чтобы разрешать доступ к данным только клиентам с соответствующими правами доступа.

3.HTTP — протокол прикладного уровня передачи данных, изначально — в виде гипертекстовых документов в формате HTML,
 в настоящее время используется для передачи произвольных данных.
Методы:
GET — получение ресурса.Метод GET запрашивает представление ресурса. Запросы с использованием этого метода могут только
извлекать данные.
HEAD - запрашивает ресурс так же, как и метод GET, но без тела ответа.
POST — создание ресурса.POST используется для отправки сущностей к определённому ресурсу. Часто вызывает изменение 
состояния или какие-то побочные эффекты на сервере.
PUT — обновление ресурса.PUT заменяет все текущие представления ресурса данными запроса.
DELETE — удаление ресурса.DELETE удаляет указанный ресурс.
CONNECT - устанавливает "туннель" к серверу, определённому по ресурсу.
OPTIONS - используется для описания параметров соединения с ресурсом.
TRACE - выполняет вызов возвращаемого тестового сообщения с ресурса.
PATCH - используется для частичного изменения ресурса.

4.General Headers (Общие заголовки) — используются в запросах и ответах.
Request Headers (Заголовки запроса) — используются только в запросах.
Response Headers (Заголовки ответа) — используются только в ответах.
Entity Headers (Заголовки сущности) — сопровождают каждую сущность сообщения. Используются в запросах и ответах.

5.Когда мы кликаем на ссылку на странице, заполняете форму или производим поиск через поисковую стрку,
браузер отправляет на сервер HTTP-запрос.